import telebot
from telebot import types
import random

# –¢–æ–∫–µ–Ω —Ç–≤–æ–µ–≥–æ –±–æ—Ç–∞
TOKEN = '7207526455:AAHAtsEaW3nZyn4BrbxJhDCKnlcjB3lMQwM'
bot = telebot.TeleBot(TOKEN)

# –†–∞–∑—Ä–µ—à—ë–Ω–Ω—ã–π Telegram ID (—Ç–æ–ª—å–∫–æ —Ç—ã)
AUTHORIZED_USER_ID = 6955280259

# –•—Ä–∞–Ω–∏–º –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
user_data = {}

# –ö–æ–º–∞–Ω–¥–∞ —Å—Ç–∞—Ä—Ç
@bot.message_handler(commands=['start'])
def start(message):
    if message.chat.id != AUTHORIZED_USER_ID:
        bot.send_message(message.chat.id, "‚õîÔ∏è –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω. –í—ã –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–≥–æ –±–æ—Ç–∞.")
        return
    show_main_menu(message)

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
def show_main_menu(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton("–í–∞–ª—é—Ç–Ω—ã–µ –ø–∞—Ä—ã")
    btn2 = types.KeyboardButton("–ö—Ä–∏–ø—Ç–∞")
    btn3 = types.KeyboardButton("–ê–∫—Ü–∏–∏")
    btn4 = types.KeyboardButton("–ò–Ω–¥–µ–∫—Å—ã")
    btn5 = types.KeyboardButton("–§—å—é—á–µ—Ä—Å—ã")
    btn6 = types.KeyboardButton("–°—ã—Ä—å—ë")
    markup.add(btn1, btn2, btn3, btn4, btn5, btn6)
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∞–∫—Ç–∏–≤–∞:", reply_markup=markup)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
@bot.message_handler(func=lambda message: message.text in ["–í–∞–ª—é—Ç–Ω—ã–µ –ø–∞—Ä—ã", "–ö—Ä–∏–ø—Ç–∞", "–ê–∫—Ü–∏–∏", "–ò–Ω–¥–µ–∫—Å—ã", "–§—å—é—á–µ—Ä—Å—ã", "–°—ã—Ä—å—ë"])
def select_asset_category(message):
    if message.chat.id != AUTHORIZED_USER_ID:
        return
    user_data[message.chat.id] = {'category': message.text}
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    if message.text == "–í–∞–ª—é—Ç–Ω—ã–µ –ø–∞—Ä—ã":
        pairs = [
            "EUR/USD", "GBP/USD", "USD/JPY", "EUR/JPY", "AUD/USD", "USD/CHF", "USD/CAD", "NZD/USD",
            "BTC/USD", "ETH/USD", "XRP/USD", "LTC/USD", "SOL/USD",
            "AAPL", "TSLA", "GOOGL", "MSFT", "AMZN",
            "NSRGY", "BAYRY", "TCEHY", "SFTBY", "RYCEY",
            "SP500", "NAS100", "DAX", "FTSE100", "NIKKEI225",
            "SP500_OTC", "DOW_OTC", "NASDAQ_OTC",
            "XAU/USD", "XAG/USD", "WTI", "BRENT", "NGAS",
            "GOLD_OTC", "OIL_OTC", "SILVER_OTC"
        ]

        for pair in pairs:
            markup.add(types.KeyboardButton(pair))
        markup.add(types.KeyboardButton("‚¨ÖÔ∏è –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"))
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏ –≤–∞–ª—é—Ç–Ω—É—é –ø–∞—Ä—É:", reply_markup=markup)
    else:
        bot.send_message(message.chat.id, "–ü–æ–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã —Ç–æ–ª—å–∫–æ –≤–∞–ª—é—Ç–Ω—ã–µ –ø–∞—Ä—ã –¥–ª—è —Ç–µ—Å—Ç–∞.", reply_markup=markup)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –≤–∞–ª—é—Ç–Ω–æ–π –ø–∞—Ä—ã
@bot.message_handler(func=lambda message: message.text in ["EUR/USD", "GBP/USD", "USD/JPY", "EUR/JPY", "AUD/USD"])
def select_pair(message):
    if message.chat.id != AUTHORIZED_USER_ID:
        return
    user_data[message.chat.id]['pair'] = message.text
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    timeframes = ["5s", "10s", "15s", "30s", "1m", "5m", "15m", "30m"]
    for tf in timeframes:
        markup.add(types.KeyboardButton(tf))
    markup.add(types.KeyboardButton("üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"))
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏ —Ç–∞–π–º—Ñ—Ä–µ–π–º —Å–¥–µ–ª–∫–∏:", reply_markup=markup)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Ç–∞–π–º—Ñ—Ä–µ–π–º–∞
@bot.message_handler(func=lambda message: message.text in ["5s", "10s", "15s", "30s", "1m", "5m", "15m", "30m"])
def select_timeframe(message):
    if message.chat.id != AUTHORIZED_USER_ID:
        return
    user_data[message.chat.id]['timeframe'] = message.text
    signal = random.choice(["‚¨ÜÔ∏è –í–≤–µ—Ä—Ö (CALL)", "‚¨áÔ∏è –í–Ω–∏–∑ (PUT)"])
    probability = random.randint(65, 85)
    pair = user_data[message.chat.id]['pair']
    timeframe = user_data[message.chat.id]['timeframe']
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(types.KeyboardButton("üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"))
    bot.send_message(
        message.chat.id,
        f"–°–∏–≥–Ω–∞–ª –¥–ª—è {pair} –Ω–∞ {timeframe}: {signal}\n–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å —É—Å–ø–µ—Ö–∞: {probability}%",
        reply_markup=markup
    )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
@bot.message_handler(func=lambda message: message.text == "üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
def back_to_main_menu(message):
    if message.chat.id != AUTHORIZED_USER_ID:
        return
    show_main_menu(message)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö –¥—Ä—É–≥–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@bot.message_handler(func=lambda message: True)
def unknown_message(message):
    if message.chat.id != AUTHORIZED_USER_ID:
        return
    show_main_menu(message)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.polling(non_stop=True)
